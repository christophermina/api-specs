#%RAML 0.8
title: Get Satisfaction API
version: 1.0.0
documentation:
- title: Get Satisfaction API
  content: Articles that matter on social publishing platform
baseUri: https://api.getsatisfaction.com/
schemas:
- CompaniesTopicsJsonByCompanyIdResponse: "{\n  \"id\": \"CompaniesTopicsJsonByCompanyIdResponse\",\n  \"title\": \"CompaniesTopicsJsonByCompanyIdResponse\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"data\": {\n      \"description\": \"a list of topic objects within a data envelope\",\n      \"type\": \"array\",\n      \"items\": {\n        \"id\": \"Datum\",\n        \"title\": \"Datum\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"active_replies\": {\n            \"description\": \"The number of replies (but not comments) that are associated with the topic and have not been archived or deleted.\",\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"at_sfn\": {\n            \"description\": \"URL for the topic page\",\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"id\": \"Author\",\n            \"title\": \"Author\",\n            \"description\": \"Returns the following data block for the author of the post (see the people object for more information)\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"at_sfn\": {\n                \"description\": \"The URL path to the user’s profile page\",\n                \"type\": \"string\"\n              },\n              \"avatar\": {\n                \"description\": \"The URL path to the full size image the user uploaded for their avatar\",\n                \"type\": \"string\"\n              },\n              \"avatar_url_large\": {\n                \"description\": \"The URL path to large sized avatar image\",\n                \"type\": \"string\"\n              },\n              \"avatar_url_medium\": {\n                \"description\": \"The URL path to medium sized avatar image\",\n                \"type\": \"string\"\n              },\n              \"avatar_url_mini\": {\n                \"description\": \"The URL path to a mini sized avatar image\",\n                \"type\": \"string\"\n              },\n              \"avatar_url_small\": {\n                \"description\": \"The URL path to small sized avatar image\",\n                \"type\": \"string\"\n              },\n              \"canonical_name\": {\n                \"description\": \"The slug for the user’s Get Satisfaction profile (/profile/[canonical name])\",\n                \"type\": \"string\"\n              },\n              \"champion\": {\n                \"description\": \"Whether the user is a champion. Returns “true” or “false”\",\n                \"type\": \"boolean\"\n              },\n              \"employee\": {\n                \"description\": \"Whether the user is an employee. Returns “true” or “false”\",\n                \"type\": \"boolean\"\n              },\n              \"id\": {\n                \"description\": \"The ID for the user\",\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              },\n              \"member_since\": {\n                \"description\": \"The date and time when the user joined\",\n                \"type\": \"string\"\n              },\n              \"name\": {\n                \"description\": \"The nickname of the user (not the “canonical name”)\",\n                \"type\": \"string\"\n              },\n              \"url\": {\n                \"description\": \"The API path to the user’s information\",\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"champion\": {\n            \"description\": \"Whether the topic was created by a champion or not. Returns “true” or “false”.\",\n            \"type\": \"boolean\"\n          },\n          \"closed_at\": {\n            \"description\": \"A timestamp of when the topic was closed. This property only exists if “is_closed” is True.\",\n            \"type\": \"string\"\n          },\n          \"company_id\": {\n            \"description\": \"The id for the company in Get Satisfaction\",\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"content\": {\n            \"description\": \"The body of the topic\",\n            \"type\": \"string\"\n          },\n          \"created_at\": {\n            \"description\": \"The date and time topic was created\",\n            \"type\": \"string\"\n          },\n          \"emotitag\": {\n            \"id\": \"Emotitag\",\n            \"title\": \"Emotitag\",\n            \"description\": \"Emoticon information\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"face\": {\n                \"description\": \"The emoticon face. Values are “happy”, “silly”, “indifferent”, and “sad”\",\n                \"type\": \"string\",\n                \"enum\": [\n                  \"\",\n                  \"\",\n                  \"\",\n                  \"\"\n                ]\n              },\n              \"feeling\": {\n                \"description\": \"The text associated with the emoticon face.\",\n                \"type\": \"string\"\n              },\n              \"intensity\": {\n                \"description\": \"The intensity of the emoticon on a scale of 0 to 4. 0 – hides the emoticon, 1 – shows the emoticon, 2 – shows the emoticon with one exclamation mark, 3 – shows the emoticon with two exclamation marks, 4 – shows the emoticon with two exclamation marks\",\n                \"type\": \"integer\",\n                \"enum\": [\n                  0,\n                  1,\n                  2,\n                  3,\n                  4\n                ]\n              }\n            }\n          },\n          \"employee\": {\n            \"description\": \"Whether the topic was created by an employee or not. Returns “true” or “false”.\",\n            \"type\": \"boolean\"\n          },\n          \"follower_count\": {\n            \"description\": \"The number of people following the topic\",\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"following\": {\n            \"description\": \"Whether the topic is being followed by the user who is authenticating the API call. Returns “true” or “false”\",\n            \"type\": \"boolean\"\n          },\n          \"has_promoted_replies\": {\n            \"description\": \"Whether the topic has any replies promoted, either through stars or as a company answer. Returns “true” or “false”\",\n            \"type\": \"boolean\"\n          },\n          \"id\": {\n            \"description\": \"The topic ID\",\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"is_archived\": {\n            \"description\": \"Whether the post has been archived. Returns “true” or “false”\",\n            \"type\": \"boolean\"\n          },\n          \"is_closed\": {\n            \"description\": \"Boolean to show if the topic has been closed. True if closed, False if not closed.\",\n            \"type\": \"boolean\"\n          },\n          \"is_removed\": {\n            \"description\": \"Whether the post has been removed. Returns “true” or “false”\",\n            \"type\": \"boolean\"\n          },\n          \"is_spam\": {\n            \"description\": \"Whether the post has been classified as spam. Returns “true” or “false”\",\n            \"type\": \"boolean\"\n          },\n          \"last_active_at\": {\n            \"description\": \"The date and time of last topic activity\",\n            \"type\": \"string\"\n          },\n          \"me_too\": {\n            \"description\": \"The URL slug for the particular topic\",\n            \"type\": \"string\"\n          },\n          \"me_too_count\": {\n            \"description\": \"The count of people who have clicked the +1 button (including the original poster)\",\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"most_recent_activity\": {\n            \"description\": \"The most recent action taken on the topic. Values are “create”, “comment”, and “follow”.\",\n            \"type\": \"string\",\n            \"enum\": [\n              \"\",\n              \"\",\n              \"\"\n            ]\n          },\n          \"reply_count\": {\n            \"description\": \"The number of replies and comments for this topic\",\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"slug\": {\n            \"description\": \"The URL slug for the particular topic\",\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"description\": \"The topic status. Values are null, pending, active, complete, rejected\",\n            \"type\": \"object\"\n          },\n          \"style\": {\n            \"description\": \"The type of topic. The possible values are “question”, “problem”, “praise”, “idea”, and “update”.\",\n            \"type\": \"string\",\n            \"enum\": [\n              \"\",\n              \"\",\n              \"\",\n              \"\",\n              \"\"\n            ]\n          },\n          \"subject\": {\n            \"description\": \"The subject line for the topic\",\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"description\": \"The API endpoint that returns the topic object\",\n            \"type\": \"string\"\n          },\n          \"user_defined_codes\": {\n            \"description\": \"The private tag if there is one. If there isn’t one, it returns “false”\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      }\n    },\n    \"total\": {\n      \"description\": \"number of results\",\n      \"type\": \"integer\",\n      \"format\": \"int32\"\n    }\n  }\n}"
- TopicsJsonResponse: "{\n  \"id\": \"TopicsJsonResponse\",\n  \"title\": \"TopicsJsonResponse\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"data\": {\n      \"description\": \"a list of topic objects within a data envelope\",\n      \"type\": \"array\",\n      \"items\": {\n        \"id\": \"Datum\",\n        \"title\": \"Datum\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"active_replies\": {\n            \"description\": \"The number of replies (but not comments) that are associated with the topic and have not been archived or deleted.\",\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"at_sfn\": {\n            \"description\": \"URL for the topic page\",\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"id\": \"Author\",\n            \"title\": \"Author\",\n            \"description\": \"Returns the following data block for the author of the post (see the people object for more information)\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"at_sfn\": {\n                \"description\": \"The URL path to the user’s profile page\",\n                \"type\": \"string\"\n              },\n              \"avatar\": {\n                \"description\": \"The URL path to the full size image the user uploaded for their avatar\",\n                \"type\": \"string\"\n              },\n              \"avatar_url_large\": {\n                \"description\": \"The URL path to large sized avatar image\",\n                \"type\": \"string\"\n              },\n              \"avatar_url_medium\": {\n                \"description\": \"The URL path to medium sized avatar image\",\n                \"type\": \"string\"\n              },\n              \"avatar_url_mini\": {\n                \"description\": \"The URL path to a mini sized avatar image\",\n                \"type\": \"string\"\n              },\n              \"avatar_url_small\": {\n                \"description\": \"The URL path to small sized avatar image\",\n                \"type\": \"string\"\n              },\n              \"canonical_name\": {\n                \"description\": \"The slug for the user’s Get Satisfaction profile (/profile/[canonical name])\",\n                \"type\": \"string\"\n              },\n              \"champion\": {\n                \"description\": \"Whether the user is a champion. Returns “true” or “false”\",\n                \"type\": \"boolean\"\n              },\n              \"employee\": {\n                \"description\": \"Whether the user is an employee. Returns “true” or “false”\",\n                \"type\": \"boolean\"\n              },\n              \"id\": {\n                \"description\": \"The ID for the user\",\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              },\n              \"member_since\": {\n                \"description\": \"The date and time when the user joined\",\n                \"type\": \"string\"\n              },\n              \"name\": {\n                \"description\": \"The nickname of the user (not the “canonical name”)\",\n                \"type\": \"string\"\n              },\n              \"url\": {\n                \"description\": \"The API path to the user’s information\",\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"champion\": {\n            \"description\": \"Whether the topic was created by a champion or not. Returns “true” or “false”.\",\n            \"type\": \"boolean\"\n          },\n          \"closed_at\": {\n            \"description\": \"A timestamp of when the topic was closed. This property only exists if “is_closed” is True.\",\n            \"type\": \"string\"\n          },\n          \"company_id\": {\n            \"description\": \"The id for the company in Get Satisfaction\",\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"content\": {\n            \"description\": \"The body of the topic\",\n            \"type\": \"string\"\n          },\n          \"created_at\": {\n            \"description\": \"The date and time topic was created\",\n            \"type\": \"string\"\n          },\n          \"emotitag\": {\n            \"id\": \"Emotitag\",\n            \"title\": \"Emotitag\",\n            \"description\": \"Emoticon information\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"face\": {\n                \"description\": \"The emoticon face. Values are “happy”, “silly”, “indifferent”, and “sad”\",\n                \"type\": \"string\",\n                \"enum\": [\n                  \"\",\n                  \"\",\n                  \"\",\n                  \"\"\n                ]\n              },\n              \"feeling\": {\n                \"description\": \"The text associated with the emoticon face.\",\n                \"type\": \"string\"\n              },\n              \"intensity\": {\n                \"description\": \"The intensity of the emoticon on a scale of 0 to 4. 0 – hides the emoticon, 1 – shows the emoticon, 2 – shows the emoticon with one exclamation mark, 3 – shows the emoticon with two exclamation marks, 4 – shows the emoticon with two exclamation marks\",\n                \"type\": \"integer\",\n                \"enum\": [\n                  0,\n                  1,\n                  2,\n                  3,\n                  4\n                ]\n              }\n            }\n          },\n          \"employee\": {\n            \"description\": \"Whether the topic was created by an employee or not. Returns “true” or “false”.\",\n            \"type\": \"boolean\"\n          },\n          \"follower_count\": {\n            \"description\": \"The number of people following the topic\",\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"following\": {\n            \"description\": \"Whether the topic is being followed by the user who is authenticating the API call. Returns “true” or “false”\",\n            \"type\": \"boolean\"\n          },\n          \"has_promoted_replies\": {\n            \"description\": \"Whether the topic has any replies promoted, either through stars or as a company answer. Returns “true” or “false”\",\n            \"type\": \"boolean\"\n          },\n          \"id\": {\n            \"description\": \"The topic ID\",\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"is_archived\": {\n            \"description\": \"Whether the post has been archived. Returns “true” or “false”\",\n            \"type\": \"boolean\"\n          },\n          \"is_closed\": {\n            \"description\": \"Boolean to show if the topic has been closed. True if closed, False if not closed.\",\n            \"type\": \"boolean\"\n          },\n          \"is_removed\": {\n            \"description\": \"Whether the post has been removed. Returns “true” or “false”\",\n            \"type\": \"boolean\"\n          },\n          \"is_spam\": {\n            \"description\": \"Whether the post has been classified as spam. Returns “true” or “false”\",\n            \"type\": \"boolean\"\n          },\n          \"last_active_at\": {\n            \"description\": \"The date and time of last topic activity\",\n            \"type\": \"string\"\n          },\n          \"me_too\": {\n            \"description\": \"The URL slug for the particular topic\",\n            \"type\": \"string\"\n          },\n          \"me_too_count\": {\n            \"description\": \"The count of people who have clicked the +1 button (including the original poster)\",\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"most_recent_activity\": {\n            \"description\": \"The most recent action taken on the topic. Values are “create”, “comment”, and “follow”.\",\n            \"type\": \"string\",\n            \"enum\": [\n              \"\",\n              \"\",\n              \"\"\n            ]\n          },\n          \"reply_count\": {\n            \"description\": \"The number of replies and comments for this topic\",\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"slug\": {\n            \"description\": \"The URL slug for the particular topic\",\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"description\": \"The topic status. Values are null, pending, active, complete, rejected\",\n            \"type\": \"object\"\n          },\n          \"style\": {\n            \"description\": \"The type of topic. The possible values are “question”, “problem”, “praise”, “idea”, and “update”.\",\n            \"type\": \"string\",\n            \"enum\": [\n              \"\",\n              \"\",\n              \"\",\n              \"\",\n              \"\"\n            ]\n          },\n          \"subject\": {\n            \"description\": \"The subject line for the topic\",\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"description\": \"The API endpoint that returns the topic object\",\n            \"type\": \"string\"\n          },\n          \"user_defined_codes\": {\n            \"description\": \"The private tag if there is one. If there isn’t one, it returns “false”\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      }\n    },\n    \"total\": {\n      \"description\": \"number of results\",\n      \"type\": \"integer\",\n      \"format\": \"int32\"\n    }\n  }\n}"
/companies/{companyId}/topics.json:
  uriParameters:
    companyId:
      description: The id of the company being queried
      type: string
      required: true
      displayName: companyId
  get:
    displayName: CompaniesTopicsJsonByCompanyId
    description: Get Company Topics
    responses:
      200:
        description: a list of topic objects within a data envelope.
        body:
          application/json:
            schema: CompaniesTopicsJsonByCompanyIdResponse
    queryParameters:
      page:
        description: Page number
        type: integer
        default: 1
        required: false
        displayName: page
      sort:
        description: Sort topics by value
        default: 
        required: false
        displayName: sort
        enum:
        - most_me_toos
        - most_replies
        - recently_active
        - recently_created
        - unanswered
      status:
        description: Filter by style
        default: 
        required: false
        displayName: status
        enum:
        - active
        - complete
        - none
        - pending
        - rejected
      style:
        description: Filter by style
        default: 
        required: false
        displayName: style
        enum:
        - idea
        - praise
        - problem
        - question
        - update
/topics.json:
  get:
    displayName: TopicsJson
    description: Get Topics
    responses:
      200:
        description: a list of topic objects within a data envelope.
        body:
          application/json:
            schema: TopicsJsonResponse
    queryParameters:
      page:
        description: Page number
        type: integer
        default: 1
        required: false
        displayName: page
      sort:
        description: Sort topics by value
        default: 
        required: false
        displayName: sort
        enum:
        - most_me_toos
        - most_replies
        - recently_active
        - recently_created
        - unanswered
      status:
        description: Filter by style
        default: 
        required: false
        displayName: status
        enum:
        - active
        - complete
        - none
        - pending
        - rejected
      style:
        description: Filter by style
        default: 
        required: false
        displayName: style
        enum:
        - idea
        - praise
        - problem
        - question
        - update
