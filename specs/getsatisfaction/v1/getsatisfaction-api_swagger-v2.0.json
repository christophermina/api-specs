{
  "swagger": "2.0",
  "info": {
    "title": "Get Satisfaction API",
    "description": "Articles that matter on social publishing platform",
    "version": "1.0.0"
  },
  "host": "api.getsatisfaction.com",
  "schemes": [
    "https"
  ],
  "basePath": "/",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/companies/{companyId}/topics.json": {
      "get": {
        "summary": "Get Company Topics",
        "description": "Getting the authenticated user’s details",
        "tags": [
          "topic"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The id of the company being queried",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "type": "integer",
            "default": 1
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort topics by value",
            "required": false,
            "type": "string",
            "enum": [
              "recently_created",
              "recently_active",
              "most_replies",
              "most_me_toos",
              "unanswered"
            ],
            "default": ""
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by style",
            "required": false,
            "type": "string",
            "enum": [
              "none",
              "pending",
              "active",
              "complete",
              "rejected"
            ],
            "default": ""
          },
          {
            "name": "style",
            "in": "query",
            "description": "Filter by style",
            "required": false,
            "type": "string",
            "enum": [
              "question",
              "problem",
              "praise",
              "idea",
              "update"
            ],
            "default": ""
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "a list of topic objects within a data envelope.",
            "schema": {
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "active_replies": {
                        "type": "integer",
                        "description": "The number of replies (but not comments) that are associated with the topic and have not been archived or deleted."
                      },
                      "at_sfn": {
                        "type": "string",
                        "description": "URL for the topic page"
                      },
                      "author": {
                        "description": "Returns the following data block for the author of the post (see the people object for more information)",
                        "properties": {
                          "at_sfn": {
                            "type": "string",
                            "description": "The URL path to the user’s profile page"
                          },
                          "avatar": {
                            "type": "string",
                            "description": "The URL path to the full size image the user uploaded for their avatar"
                          },
                          "avatar_url_large": {
                            "type": "string",
                            "description": "The URL path to large sized avatar image"
                          },
                          "avatar_url_medium": {
                            "type": "string",
                            "description": "The URL path to medium sized avatar image"
                          },
                          "avatar_url_mini": {
                            "type": "string",
                            "description": "The URL path to a mini sized avatar image"
                          },
                          "avatar_url_small": {
                            "type": "string",
                            "description": "The URL path to small sized avatar image"
                          },
                          "canonical_name": {
                            "type": "string",
                            "description": "The slug for the user’s Get Satisfaction profile (/profile/[canonical name])"
                          },
                          "champion": {
                            "type": "boolean",
                            "description": "Whether the user is a champion. Returns “true” or “false”"
                          },
                          "employee\"": {
                            "type": "boolean",
                            "description": "Whether the user is an employee. Returns “true” or “false”"
                          },
                          "id": {
                            "type": "integer",
                            "description": "The ID for the user"
                          },
                          "member_since": {
                            "type": "string",
                            "description": "The date and time when the user joined"
                          },
                          "name": {
                            "type": "string",
                            "description": "The nickname of the user (not the “canonical name”)"
                          },
                          "url": {
                            "type": "string",
                            "description": "The API path to the user’s information"
                          }
                        }
                      },
                      "champion": {
                        "type": "boolean",
                        "description": "Whether the topic was created by a champion or not. Returns “true” or “false”."
                      },
                      "closed_at": {
                        "type": "string",
                        "description": "A timestamp of when the topic was closed. This property only exists if “is_closed” is True."
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "The id for the company in Get Satisfaction"
                      },
                      "created_at": {
                        "type": "string",
                        "description": "The date and time topic was created"
                      },
                      "content": {
                        "type": "string",
                        "description": "The body of the topic"
                      },
                      "emotitag": {
                        "description": "Emoticon information",
                        "properties": {
                          "face": {
                            "type": "string",
                            "description": "The emoticon face. Values are “happy”, “silly”, “indifferent”, and “sad”",
                            "enum": [
                              "happy",
                              "silly",
                              "indifferent",
                              "sad"
                            ]
                          },
                          "feeling": {
                            "type": "string",
                            "description": "The text associated with the emoticon face."
                          },
                          "intensity\"": {
                            "type": "integer",
                            "description": "The intensity of the emoticon on a scale of 0 to 4. 0 – hides the emoticon, 1 – shows the emoticon, 2 – shows the emoticon with one exclamation mark, 3 – shows the emoticon with two exclamation marks, 4 – shows the emoticon with two exclamation marks",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4
                            ]
                          }
                        }
                      },
                      "employee": {
                        "type": "boolean",
                        "description": "Whether the topic was created by an employee or not. Returns “true” or “false”."
                      },
                      "follower_count": {
                        "type": "integer",
                        "description": "The number of people following the topic"
                      },
                      "following": {
                        "type": "boolean",
                        "description": "Whether the topic is being followed by the user who is authenticating the API call. Returns “true” or “false”"
                      },
                      "has_promoted_replies": {
                        "type": "boolean",
                        "description": "Whether the topic has any replies promoted, either through stars or as a company answer. Returns “true” or “false”"
                      },
                      "id": {
                        "type": "integer",
                        "description": "The topic ID"
                      },
                      "is_archived": {
                        "type": "boolean",
                        "description": "Whether the post has been archived. Returns “true” or “false”"
                      },
                      "is_closed": {
                        "type": "boolean",
                        "description": "Boolean to show if the topic has been closed. True if closed, False if not closed."
                      },
                      "is_spam": {
                        "type": "boolean",
                        "description": "Whether the post has been classified as spam. Returns “true” or “false”"
                      },
                      "is_removed": {
                        "type": "boolean",
                        "description": "Whether the post has been removed. Returns “true” or “false”"
                      },
                      "last_active_at": {
                        "type": "string",
                        "description": "The date and time of last topic activity"
                      },
                      "me_too": {
                        "type": "string",
                        "description": "The URL slug for the particular topic"
                      },
                      "me_too_count": {
                        "type": "integer",
                        "description": "The count of people who have clicked the +1 button (including the original poster)"
                      },
                      "most_recent_activity": {
                        "type": "string",
                        "description": "The most recent action taken on the topic. Values are “create”, “comment”, and “follow”.",
                        "enum": [
                          "create",
                          "comment",
                          "follow"
                        ]
                      },
                      "reply_count": {
                        "type": "integer",
                        "description": "The number of replies and comments for this topic"
                      },
                      "slug": {
                        "type": "string",
                        "description": "The URL slug for the particular topic"
                      },
                      "status": {
                        "type": "string",
                        "description": "The topic status. Values are null, pending, active, complete, rejected",
                        "enum": [
                          "null",
                          "pending",
                          "active",
                          "complete",
                          "rejected"
                        ]
                      },
                      "style": {
                        "type": "string",
                        "description": "The type of topic. The possible values are “question”, “problem”, “praise”, “idea”, and “update”.",
                        "enum": [
                          "question",
                          "problem",
                          "praise",
                          "idea",
                          "update"
                        ]
                      },
                      "subject": {
                        "type": "string",
                        "description": "The subject line for the topic"
                      },
                      "url": {
                        "type": "string",
                        "description": "The API endpoint that returns the topic object"
                      },
                      "user_defined_codes": {
                        "type": "array",
                        "description": "The private tag if there is one. If there isn’t one, it returns “false”",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "description": "a list of topic objects within a data envelope"
                },
                "total": {
                  "type": "integer",
                  "description": "number of results"
                }
              }
            }
          }
        }
      }
    },
    "/topics.json": {
      "get": {
        "summary": "Get Topics",
        "description": "Getting the authenticated user’s details",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "type": "integer",
            "default": 1
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort topics by value",
            "required": false,
            "type": "string",
            "enum": [
              "recently_created",
              "recently_active",
              "most_replies",
              "most_me_toos",
              "unanswered"
            ],
            "default": ""
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by style",
            "required": false,
            "type": "string",
            "enum": [
              "none",
              "pending",
              "active",
              "complete",
              "rejected"
            ],
            "default": ""
          },
          {
            "name": "style",
            "in": "query",
            "description": "Filter by style",
            "required": false,
            "type": "string",
            "enum": [
              "question",
              "problem",
              "praise",
              "idea",
              "update"
            ],
            "default": ""
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "a list of topic objects within a data envelope.",
            "schema": {
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "active_replies": {
                        "type": "integer",
                        "description": "The number of replies (but not comments) that are associated with the topic and have not been archived or deleted."
                      },
                      "at_sfn": {
                        "type": "string",
                        "description": "URL for the topic page"
                      },
                      "author": {
                        "description": "Returns the following data block for the author of the post (see the people object for more information)",
                        "properties": {
                          "at_sfn": {
                            "type": "string",
                            "description": "The URL path to the user’s profile page"
                          },
                          "avatar": {
                            "type": "string",
                            "description": "The URL path to the full size image the user uploaded for their avatar"
                          },
                          "avatar_url_large": {
                            "type": "string",
                            "description": "The URL path to large sized avatar image"
                          },
                          "avatar_url_medium": {
                            "type": "string",
                            "description": "The URL path to medium sized avatar image"
                          },
                          "avatar_url_mini": {
                            "type": "string",
                            "description": "The URL path to a mini sized avatar image"
                          },
                          "avatar_url_small": {
                            "type": "string",
                            "description": "The URL path to small sized avatar image"
                          },
                          "canonical_name": {
                            "type": "string",
                            "description": "The slug for the user’s Get Satisfaction profile (/profile/[canonical name])"
                          },
                          "champion": {
                            "type": "boolean",
                            "description": "Whether the user is a champion. Returns “true” or “false”"
                          },
                          "employee\"": {
                            "type": "boolean",
                            "description": "Whether the user is an employee. Returns “true” or “false”"
                          },
                          "id": {
                            "type": "integer",
                            "description": "The ID for the user"
                          },
                          "member_since": {
                            "type": "string",
                            "description": "The date and time when the user joined"
                          },
                          "name": {
                            "type": "string",
                            "description": "The nickname of the user (not the “canonical name”)"
                          },
                          "url": {
                            "type": "string",
                            "description": "The API path to the user’s information"
                          }
                        }
                      },
                      "champion": {
                        "type": "boolean",
                        "description": "Whether the topic was created by a champion or not. Returns “true” or “false”."
                      },
                      "closed_at": {
                        "type": "string",
                        "description": "A timestamp of when the topic was closed. This property only exists if “is_closed” is True."
                      },
                      "company_id": {
                        "type": "integer",
                        "description": "The id for the company in Get Satisfaction"
                      },
                      "created_at": {
                        "type": "string",
                        "description": "The date and time topic was created"
                      },
                      "content": {
                        "type": "string",
                        "description": "The body of the topic"
                      },
                      "emotitag": {
                        "description": "Emoticon information",
                        "properties": {
                          "face": {
                            "type": "string",
                            "description": "The emoticon face. Values are “happy”, “silly”, “indifferent”, and “sad”",
                            "enum": [
                              "happy",
                              "silly",
                              "indifferent",
                              "sad"
                            ]
                          },
                          "feeling": {
                            "type": "string",
                            "description": "The text associated with the emoticon face."
                          },
                          "intensity\"": {
                            "type": "integer",
                            "description": "The intensity of the emoticon on a scale of 0 to 4. 0 – hides the emoticon, 1 – shows the emoticon, 2 – shows the emoticon with one exclamation mark, 3 – shows the emoticon with two exclamation marks, 4 – shows the emoticon with two exclamation marks",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4
                            ]
                          }
                        }
                      },
                      "employee": {
                        "type": "boolean",
                        "description": "Whether the topic was created by an employee or not. Returns “true” or “false”."
                      },
                      "follower_count": {
                        "type": "integer",
                        "description": "The number of people following the topic"
                      },
                      "following": {
                        "type": "boolean",
                        "description": "Whether the topic is being followed by the user who is authenticating the API call. Returns “true” or “false”"
                      },
                      "has_promoted_replies": {
                        "type": "boolean",
                        "description": "Whether the topic has any replies promoted, either through stars or as a company answer. Returns “true” or “false”"
                      },
                      "id": {
                        "type": "integer",
                        "description": "The topic ID"
                      },
                      "is_archived": {
                        "type": "boolean",
                        "description": "Whether the post has been archived. Returns “true” or “false”"
                      },
                      "is_closed": {
                        "type": "boolean",
                        "description": "Boolean to show if the topic has been closed. True if closed, False if not closed."
                      },
                      "is_spam": {
                        "type": "boolean",
                        "description": "Whether the post has been classified as spam. Returns “true” or “false”"
                      },
                      "is_removed": {
                        "type": "boolean",
                        "description": "Whether the post has been removed. Returns “true” or “false”"
                      },
                      "last_active_at": {
                        "type": "string",
                        "description": "The date and time of last topic activity"
                      },
                      "me_too": {
                        "type": "string",
                        "description": "The URL slug for the particular topic"
                      },
                      "me_too_count": {
                        "type": "integer",
                        "description": "The count of people who have clicked the +1 button (including the original poster)"
                      },
                      "most_recent_activity": {
                        "type": "string",
                        "description": "The most recent action taken on the topic. Values are “create”, “comment”, and “follow”.",
                        "enum": [
                          "create",
                          "comment",
                          "follow"
                        ]
                      },
                      "reply_count": {
                        "type": "integer",
                        "description": "The number of replies and comments for this topic"
                      },
                      "slug": {
                        "type": "string",
                        "description": "The URL slug for the particular topic"
                      },
                      "status": {
                        "type": "string",
                        "description": "The topic status. Values are null, pending, active, complete, rejected",
                        "enum": [
                          "null",
                          "pending",
                          "active",
                          "complete",
                          "rejected"
                        ]
                      },
                      "style": {
                        "type": "string",
                        "description": "The type of topic. The possible values are “question”, “problem”, “praise”, “idea”, and “update”.",
                        "enum": [
                          "question",
                          "problem",
                          "praise",
                          "idea",
                          "update"
                        ]
                      },
                      "subject": {
                        "type": "string",
                        "description": "The subject line for the topic"
                      },
                      "url": {
                        "type": "string",
                        "description": "The API endpoint that returns the topic object"
                      },
                      "user_defined_codes": {
                        "type": "array",
                        "description": "The private tag if there is one. If there isn’t one, it returns “false”",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "description": "a list of topic objects within a data envelope"
                },
                "total": {
                  "type": "integer",
                  "description": "number of results"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "properties": {
        "at_sfn": {
          "type": "string",
          "description": "The URL path to the user’s profile page"
        },
        "avatar": {
          "type": "string",
          "description": "The URL path to the full size image the user uploaded for their avatar"
        },
        "avatar_url_large": {
          "type": "string",
          "description": "The URL path to large sized avatar image"
        },
        "avatar_url_medium": {
          "type": "string",
          "description": "The URL path to medium sized avatar image"
        },
        "avatar_url_mini": {
          "type": "string",
          "description": "The URL path to a mini sized avatar image"
        },
        "avatar_url_small": {
          "type": "string",
          "description": "The URL path to small sized avatar image"
        },
        "canonical_name": {
          "type": "string",
          "description": "The slug for the user’s Get Satisfaction profile (/profile/[canonical name])"
        },
        "champion": {
          "type": "boolean",
          "description": "Whether the user is a champion. Returns “true” or “false”"
        },
        "employee\"": {
          "type": "boolean",
          "description": "Whether the user is an employee. Returns “true” or “false”"
        },
        "id": {
          "type": "integer",
          "description": "The ID for the user"
        },
        "member_since": {
          "type": "string",
          "description": "The date and time when the user joined"
        },
        "name": {
          "type": "string",
          "description": "The nickname of the user (not the “canonical name”)"
        },
        "url": {
          "type": "string",
          "description": "The API path to the user’s information"
        }
      }
    },
    "Emotitag": {
      "properties": {
        "face": {
          "type": "string",
          "description": "The emoticon face. Values are “happy”, “silly”, “indifferent”, and “sad”",
          "enum": [
            "happy",
            "silly",
            "indifferent",
            "sad"
          ]
        },
        "feeling": {
          "type": "string",
          "description": "The text associated with the emoticon face."
        },
        "intensity\"": {
          "type": "integer",
          "description": "The intensity of the emoticon on a scale of 0 to 4. 0 – hides the emoticon, 1 – shows the emoticon, 2 – shows the emoticon with one exclamation mark, 3 – shows the emoticon with two exclamation marks, 4 – shows the emoticon with two exclamation marks",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ]
        }
      }
    },
    "Topic": {
      "properties": {
        "active_replies": {
          "type": "integer",
          "description": "The number of replies (but not comments) that are associated with the topic and have not been archived or deleted."
        },
        "at_sfn": {
          "type": "string",
          "description": "URL for the topic page"
        },
        "author": {
          "description": "Returns the following data block for the author of the post (see the people object for more information)",
          "properties": {
            "at_sfn": {
              "type": "string",
              "description": "The URL path to the user’s profile page"
            },
            "avatar": {
              "type": "string",
              "description": "The URL path to the full size image the user uploaded for their avatar"
            },
            "avatar_url_large": {
              "type": "string",
              "description": "The URL path to large sized avatar image"
            },
            "avatar_url_medium": {
              "type": "string",
              "description": "The URL path to medium sized avatar image"
            },
            "avatar_url_mini": {
              "type": "string",
              "description": "The URL path to a mini sized avatar image"
            },
            "avatar_url_small": {
              "type": "string",
              "description": "The URL path to small sized avatar image"
            },
            "canonical_name": {
              "type": "string",
              "description": "The slug for the user’s Get Satisfaction profile (/profile/[canonical name])"
            },
            "champion": {
              "type": "boolean",
              "description": "Whether the user is a champion. Returns “true” or “false”"
            },
            "employee\"": {
              "type": "boolean",
              "description": "Whether the user is an employee. Returns “true” or “false”"
            },
            "id": {
              "type": "integer",
              "description": "The ID for the user"
            },
            "member_since": {
              "type": "string",
              "description": "The date and time when the user joined"
            },
            "name": {
              "type": "string",
              "description": "The nickname of the user (not the “canonical name”)"
            },
            "url": {
              "type": "string",
              "description": "The API path to the user’s information"
            }
          }
        },
        "champion": {
          "type": "boolean",
          "description": "Whether the topic was created by a champion or not. Returns “true” or “false”."
        },
        "closed_at": {
          "type": "string",
          "description": "A timestamp of when the topic was closed. This property only exists if “is_closed” is True."
        },
        "company_id": {
          "type": "integer",
          "description": "The id for the company in Get Satisfaction"
        },
        "created_at": {
          "type": "string",
          "description": "The date and time topic was created"
        },
        "content": {
          "type": "string",
          "description": "The body of the topic"
        },
        "emotitag": {
          "description": "Emoticon information",
          "properties": {
            "face": {
              "type": "string",
              "description": "The emoticon face. Values are “happy”, “silly”, “indifferent”, and “sad”",
              "enum": [
                "happy",
                "silly",
                "indifferent",
                "sad"
              ]
            },
            "feeling": {
              "type": "string",
              "description": "The text associated with the emoticon face."
            },
            "intensity\"": {
              "type": "integer",
              "description": "The intensity of the emoticon on a scale of 0 to 4. 0 – hides the emoticon, 1 – shows the emoticon, 2 – shows the emoticon with one exclamation mark, 3 – shows the emoticon with two exclamation marks, 4 – shows the emoticon with two exclamation marks",
              "enum": [
                0,
                1,
                2,
                3,
                4
              ]
            }
          }
        },
        "employee": {
          "type": "boolean",
          "description": "Whether the topic was created by an employee or not. Returns “true” or “false”."
        },
        "follower_count": {
          "type": "integer",
          "description": "The number of people following the topic"
        },
        "following": {
          "type": "boolean",
          "description": "Whether the topic is being followed by the user who is authenticating the API call. Returns “true” or “false”"
        },
        "has_promoted_replies": {
          "type": "boolean",
          "description": "Whether the topic has any replies promoted, either through stars or as a company answer. Returns “true” or “false”"
        },
        "id": {
          "type": "integer",
          "description": "The topic ID"
        },
        "is_archived": {
          "type": "boolean",
          "description": "Whether the post has been archived. Returns “true” or “false”"
        },
        "is_closed": {
          "type": "boolean",
          "description": "Boolean to show if the topic has been closed. True if closed, False if not closed."
        },
        "is_spam": {
          "type": "boolean",
          "description": "Whether the post has been classified as spam. Returns “true” or “false”"
        },
        "is_removed": {
          "type": "boolean",
          "description": "Whether the post has been removed. Returns “true” or “false”"
        },
        "last_active_at": {
          "type": "string",
          "description": "The date and time of last topic activity"
        },
        "me_too": {
          "type": "string",
          "description": "The URL slug for the particular topic"
        },
        "me_too_count": {
          "type": "integer",
          "description": "The count of people who have clicked the +1 button (including the original poster)"
        },
        "most_recent_activity": {
          "type": "string",
          "description": "The most recent action taken on the topic. Values are “create”, “comment”, and “follow”.",
          "enum": [
            "create",
            "comment",
            "follow"
          ]
        },
        "reply_count": {
          "type": "integer",
          "description": "The number of replies and comments for this topic"
        },
        "slug": {
          "type": "string",
          "description": "The URL slug for the particular topic"
        },
        "status": {
          "type": "string",
          "description": "The topic status. Values are null, pending, active, complete, rejected",
          "enum": [
            "null",
            "pending",
            "active",
            "complete",
            "rejected"
          ]
        },
        "style": {
          "type": "string",
          "description": "The type of topic. The possible values are “question”, “problem”, “praise”, “idea”, and “update”.",
          "enum": [
            "question",
            "problem",
            "praise",
            "idea",
            "update"
          ]
        },
        "subject": {
          "type": "string",
          "description": "The subject line for the topic"
        },
        "url": {
          "type": "string",
          "description": "The API endpoint that returns the topic object"
        },
        "user_defined_codes": {
          "type": "array",
          "description": "The private tag if there is one. If there isn’t one, it returns “false”",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TopicsData": {
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "properties": {
              "active_replies": {
                "type": "integer",
                "description": "The number of replies (but not comments) that are associated with the topic and have not been archived or deleted."
              },
              "at_sfn": {
                "type": "string",
                "description": "URL for the topic page"
              },
              "author": {
                "description": "Returns the following data block for the author of the post (see the people object for more information)",
                "properties": {
                  "at_sfn": {
                    "type": "string",
                    "description": "The URL path to the user’s profile page"
                  },
                  "avatar": {
                    "type": "string",
                    "description": "The URL path to the full size image the user uploaded for their avatar"
                  },
                  "avatar_url_large": {
                    "type": "string",
                    "description": "The URL path to large sized avatar image"
                  },
                  "avatar_url_medium": {
                    "type": "string",
                    "description": "The URL path to medium sized avatar image"
                  },
                  "avatar_url_mini": {
                    "type": "string",
                    "description": "The URL path to a mini sized avatar image"
                  },
                  "avatar_url_small": {
                    "type": "string",
                    "description": "The URL path to small sized avatar image"
                  },
                  "canonical_name": {
                    "type": "string",
                    "description": "The slug for the user’s Get Satisfaction profile (/profile/[canonical name])"
                  },
                  "champion": {
                    "type": "boolean",
                    "description": "Whether the user is a champion. Returns “true” or “false”"
                  },
                  "employee\"": {
                    "type": "boolean",
                    "description": "Whether the user is an employee. Returns “true” or “false”"
                  },
                  "id": {
                    "type": "integer",
                    "description": "The ID for the user"
                  },
                  "member_since": {
                    "type": "string",
                    "description": "The date and time when the user joined"
                  },
                  "name": {
                    "type": "string",
                    "description": "The nickname of the user (not the “canonical name”)"
                  },
                  "url": {
                    "type": "string",
                    "description": "The API path to the user’s information"
                  }
                }
              },
              "champion": {
                "type": "boolean",
                "description": "Whether the topic was created by a champion or not. Returns “true” or “false”."
              },
              "closed_at": {
                "type": "string",
                "description": "A timestamp of when the topic was closed. This property only exists if “is_closed” is True."
              },
              "company_id": {
                "type": "integer",
                "description": "The id for the company in Get Satisfaction"
              },
              "created_at": {
                "type": "string",
                "description": "The date and time topic was created"
              },
              "content": {
                "type": "string",
                "description": "The body of the topic"
              },
              "emotitag": {
                "description": "Emoticon information",
                "properties": {
                  "face": {
                    "type": "string",
                    "description": "The emoticon face. Values are “happy”, “silly”, “indifferent”, and “sad”",
                    "enum": [
                      "happy",
                      "silly",
                      "indifferent",
                      "sad"
                    ]
                  },
                  "feeling": {
                    "type": "string",
                    "description": "The text associated with the emoticon face."
                  },
                  "intensity\"": {
                    "type": "integer",
                    "description": "The intensity of the emoticon on a scale of 0 to 4. 0 – hides the emoticon, 1 – shows the emoticon, 2 – shows the emoticon with one exclamation mark, 3 – shows the emoticon with two exclamation marks, 4 – shows the emoticon with two exclamation marks",
                    "enum": [
                      0,
                      1,
                      2,
                      3,
                      4
                    ]
                  }
                }
              },
              "employee": {
                "type": "boolean",
                "description": "Whether the topic was created by an employee or not. Returns “true” or “false”."
              },
              "follower_count": {
                "type": "integer",
                "description": "The number of people following the topic"
              },
              "following": {
                "type": "boolean",
                "description": "Whether the topic is being followed by the user who is authenticating the API call. Returns “true” or “false”"
              },
              "has_promoted_replies": {
                "type": "boolean",
                "description": "Whether the topic has any replies promoted, either through stars or as a company answer. Returns “true” or “false”"
              },
              "id": {
                "type": "integer",
                "description": "The topic ID"
              },
              "is_archived": {
                "type": "boolean",
                "description": "Whether the post has been archived. Returns “true” or “false”"
              },
              "is_closed": {
                "type": "boolean",
                "description": "Boolean to show if the topic has been closed. True if closed, False if not closed."
              },
              "is_spam": {
                "type": "boolean",
                "description": "Whether the post has been classified as spam. Returns “true” or “false”"
              },
              "is_removed": {
                "type": "boolean",
                "description": "Whether the post has been removed. Returns “true” or “false”"
              },
              "last_active_at": {
                "type": "string",
                "description": "The date and time of last topic activity"
              },
              "me_too": {
                "type": "string",
                "description": "The URL slug for the particular topic"
              },
              "me_too_count": {
                "type": "integer",
                "description": "The count of people who have clicked the +1 button (including the original poster)"
              },
              "most_recent_activity": {
                "type": "string",
                "description": "The most recent action taken on the topic. Values are “create”, “comment”, and “follow”.",
                "enum": [
                  "create",
                  "comment",
                  "follow"
                ]
              },
              "reply_count": {
                "type": "integer",
                "description": "The number of replies and comments for this topic"
              },
              "slug": {
                "type": "string",
                "description": "The URL slug for the particular topic"
              },
              "status": {
                "type": "string",
                "description": "The topic status. Values are null, pending, active, complete, rejected",
                "enum": [
                  "null",
                  "pending",
                  "active",
                  "complete",
                  "rejected"
                ]
              },
              "style": {
                "type": "string",
                "description": "The type of topic. The possible values are “question”, “problem”, “praise”, “idea”, and “update”.",
                "enum": [
                  "question",
                  "problem",
                  "praise",
                  "idea",
                  "update"
                ]
              },
              "subject": {
                "type": "string",
                "description": "The subject line for the topic"
              },
              "url": {
                "type": "string",
                "description": "The API endpoint that returns the topic object"
              },
              "user_defined_codes": {
                "type": "array",
                "description": "The private tag if there is one. If there isn’t one, it returns “false”",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "description": "a list of topic objects within a data envelope"
        },
        "total": {
          "type": "integer",
          "description": "number of results"
        }
      }
    }
  }
}